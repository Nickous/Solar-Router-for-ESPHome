# ----------------------------------------------------------------------------------------------------
# ESPHome configuration - This part depends on your hardware target
# ----------------------------------------------------------------------------------------------------

esphome:
  name: wt32-eth01-2
  friendly_name: wt32-eth01-2

esp32:
  board: wt32-eth01
  framework:
    type: arduino

# Enable logging
logger:
  baud_rate: 115200
  level: INFO
  logs:
    component: ERROR
    light: ERROR
    http_request.arduino: ERROR

# Enable Home Assistant API
api:
  encryption:
    key: !secret wt32_eth01_2_api_encryption_key

# Enable over-the-air updates
ota:
  - platform: esphome
    password: !secret wt32_eth01_2_ota_password

# WiFi connection
# To activate WiFi :
#   Uncomment this section parameters and comment RJ45 ethernet section
#wifi:
#  ssid: !secret wifi_ssid
#  password: !secret wifi_password
#  # If you have a WiFi activity plannification, you may have to update the reboot timeout (Default: 15min)
#  reboot_timeout: 24h

# Configure RJ45 ethernet
# To activate RJ45 ethernet :
#   Uncomment this section parameters and comment WiFi section 
ethernet:
  type: LAN8720
  mdc_pin: GPIO23
  mdio_pin: GPIO18
  clk_mode: GPIO0_IN
  phy_addr: 1
  power_pin: GPIO16

# Activate web interface
web_server:
  port: 80

# ----------------------------------------------------------------------------------------------------
# Customisation
# ----------------------------------------------------------------------------------------------------
# This part of the script is designed to be use for customisation. It shouldn't be necessary to
# edit other part of the script to perform configuration.

substitutions:
  # Power meter source -----------------------------------------------------------
  # Define ip address of Power Meter (Fronius Inverter)
  power_meter_ip_address: "192.168.1.21"

  # Regulator configuration 
  # Define GPIO pin connected to AC Dimmer for gate and zero crossing detection.
  regulator_gate_pin: GPIO17 # TXD
  regulator_zero_crossing_pin: GPIO39

  # LEDs -------------------------------------------------------------------------
  # Green LED is reflecting regulation status
  # Yellow LED is reflecting power meter status
  green_led_pin: GPIO32 # CFG
  yellow_led_pin: GPIO14

  # Temperature sensor
  DS18B20_pin: GPIO02
  temperature_update_interval: 1s
  red_led_pin: GPIO4

packages:
  common:
    url: https://github.com/XavierBerger/Solar-Router-for-ESPHome/
    file: solar_router/common.yaml
    refresh: 1d
  power_meter:
    url: https://github.com/XavierBerger/Solar-Router-for-ESPHome/
    file: solar_router/power_meter_fronius.yaml
    refresh: 1d
  regulator:
    url: https://github.com/XavierBerger/Solar-Router-for-ESPHome/
    file: solar_router/regulator_triac.yaml
    refresh: 1d
  solar_router:
    url: https://github.com/XavierBerger/Solar-Router-for-ESPHome/
    file: solar_router/engine.yaml
    refresh: 1d
  energy_counter:
    url: https://github.com/XavierBerger/Solar-Router-for-ESPHome/
    file: solar_router/energy_counter_theorical.yaml
    refresh: 1d
  temperature_limmiter:
    url: https://github.com/XavierBerger/Solar-Router-for-ESPHome/
    file: solar_router/temperature_limiter_DS18B20.yaml
    refresh: 1d
